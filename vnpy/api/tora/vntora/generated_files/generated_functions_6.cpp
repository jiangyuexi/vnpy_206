#include "config.h"

#include <iostream>
#include <string>
#include <pybind11/pybind11.h>
#include <autocxxpy/autocxxpy.hpp>

#include "module.hpp"
#include "wrappers.hpp"
#include "generated_functions.h"

#include "TORATstpMdApi.h"
#include "TORATstpTraderApi.h"
#include "TORATstpUserApiDataType.h"
#include "TORATstpUserApiStruct.h"


void generate_class_CTORATstpMdSpi(pybind11::object & parent)
{
    pybind11::class_<CTORATstpMdSpi, PyCTORATstpMdSpi> c(parent, "CTORATstpMdSpi");
    if constexpr (std::is_default_constructible_v<PyCTORATstpMdSpi>)
        c.def(pybind11::init<>());
    c.def("OnFrontConnected",
        &CTORATstpMdSpi::OnFrontConnected,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnFrontDisconnected",
        &CTORATstpMdSpi::OnFrontDisconnected,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspError",
        &CTORATstpMdSpi::OnRspError,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspUserLogin",
        &CTORATstpMdSpi::OnRspUserLogin,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspUserLogout",
        &CTORATstpMdSpi::OnRspUserLogout,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspSubMarketData",
        &CTORATstpMdSpi::OnRspSubMarketData,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspUnSubMarketData",
        &CTORATstpMdSpi::OnRspUnSubMarketData,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspSubSpecialMarketData",
        &CTORATstpMdSpi::OnRspSubSpecialMarketData,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspUnSubSpecialMarketData",
        &CTORATstpMdSpi::OnRspUnSubSpecialMarketData,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspSubFundsFlowMarketData",
        &CTORATstpMdSpi::OnRspSubFundsFlowMarketData,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspUnSubFundsFlowMarketData",
        &CTORATstpMdSpi::OnRspUnSubFundsFlowMarketData,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRtnDepthMarketData",
        &CTORATstpMdSpi::OnRtnDepthMarketData,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRtnSpecialMarketData",
        &CTORATstpMdSpi::OnRtnSpecialMarketData,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRtnEffectPriceMarketData",
        &CTORATstpMdSpi::OnRtnEffectPriceMarketData,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRtnEffectVolumeMarketData",
        &CTORATstpMdSpi::OnRtnEffectVolumeMarketData,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRtnFundsFlowMarketData",
        &CTORATstpMdSpi::OnRtnFundsFlowMarketData,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    AUTOCXXPY_POST_REGISTER_CLASS(tag_vntora, CTORATstpMdSpi, c);
    module_vntora::objects.emplace("CTORATstpMdSpi", c);
}
void generate_class_CTORATstpMdApi(pybind11::object & parent)
{
    pybind11::class_<
        CTORATstpMdApi,
        std::unique_ptr<CTORATstpMdApi, pybind11::nodelete>,
        PyCTORATstpMdApi
    > c(parent, "CTORATstpMdApi");
    if constexpr (std::is_default_constructible_v<PyCTORATstpMdApi>)
        c.def(pybind11::init<>());
    c.def_static("CreateTstpMdApi",
        &CTORATstpMdApi::CreateTstpMdApi,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def_static("GetApiVersion",
        &CTORATstpMdApi::GetApiVersion,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("Release",
        &CTORATstpMdApi::Release,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("Init",
        &CTORATstpMdApi::Init,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("Join",
        &CTORATstpMdApi::Join,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("RegisterFront",
        &CTORATstpMdApi::RegisterFront,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("RegisterNameServer",
        &CTORATstpMdApi::RegisterNameServer,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("RegisterDeriveServer",
        &CTORATstpMdApi::RegisterDeriveServer,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("RegisterSpi",
        &CTORATstpMdApi::RegisterSpi,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("SubscribeMarketData",
        autocxxpy::apply_function_transform<
            autocxxpy::function_constant<
                &CTORATstpMdApi::SubscribeMarketData
            >, 
            brigand::list<
                autocxxpy::indexed_transform_holder<autocxxpy::string_array_transform, 0 + 1/*self*/>
            >
        >::value,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("UnSubscribeMarketData",
        autocxxpy::apply_function_transform<
            autocxxpy::function_constant<
                &CTORATstpMdApi::UnSubscribeMarketData
            >, 
            brigand::list<
                autocxxpy::indexed_transform_holder<autocxxpy::string_array_transform, 0 + 1/*self*/>
            >
        >::value,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("SubscribeSpecialMarketData",
        autocxxpy::apply_function_transform<
            autocxxpy::function_constant<
                &CTORATstpMdApi::SubscribeSpecialMarketData
            >, 
            brigand::list<
                autocxxpy::indexed_transform_holder<autocxxpy::string_array_transform, 0 + 1/*self*/>
            >
        >::value,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("UnSubscribeSpecialMarketData",
        autocxxpy::apply_function_transform<
            autocxxpy::function_constant<
                &CTORATstpMdApi::UnSubscribeSpecialMarketData
            >, 
            brigand::list<
                autocxxpy::indexed_transform_holder<autocxxpy::string_array_transform, 0 + 1/*self*/>
            >
        >::value,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("SubscribeFundsFlowMarketData",
        autocxxpy::apply_function_transform<
            autocxxpy::function_constant<
                &CTORATstpMdApi::SubscribeFundsFlowMarketData
            >, 
            brigand::list<
                autocxxpy::indexed_transform_holder<autocxxpy::string_array_transform, 0 + 1/*self*/>
            >
        >::value,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("UnSubscribeFundsFlowMarketData",
        autocxxpy::apply_function_transform<
            autocxxpy::function_constant<
                &CTORATstpMdApi::UnSubscribeFundsFlowMarketData
            >, 
            brigand::list<
                autocxxpy::indexed_transform_holder<autocxxpy::string_array_transform, 0 + 1/*self*/>
            >
        >::value,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("ReqUserLogin",
        &CTORATstpMdApi::ReqUserLogin,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("ReqUserLogout",
        &CTORATstpMdApi::ReqUserLogout,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    AUTOCXXPY_POST_REGISTER_CLASS(tag_vntora, CTORATstpMdApi, c);
    module_vntora::objects.emplace("CTORATstpMdApi", c);
}
void generate_class_CTORATstpTraderSpi(pybind11::object & parent)
{
    pybind11::class_<CTORATstpTraderSpi, PyCTORATstpTraderSpi> c(parent, "CTORATstpTraderSpi");
    if constexpr (std::is_default_constructible_v<PyCTORATstpTraderSpi>)
        c.def(pybind11::init<>());
    c.def("OnFrontConnected",
        &CTORATstpTraderSpi::OnFrontConnected,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnFrontDisconnected",
        &CTORATstpTraderSpi::OnFrontDisconnected,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspError",
        &CTORATstpTraderSpi::OnRspError,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspUserLogin",
        &CTORATstpTraderSpi::OnRspUserLogin,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspUserLogout",
        &CTORATstpTraderSpi::OnRspUserLogout,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspUserPasswordUpdate",
        &CTORATstpTraderSpi::OnRspUserPasswordUpdate,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspInputDeviceSerial",
        &CTORATstpTraderSpi::OnRspInputDeviceSerial,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspOrderInsert",
        &CTORATstpTraderSpi::OnRspOrderInsert,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRtnOrder",
        &CTORATstpTraderSpi::OnRtnOrder,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnErrRtnOrderInsert",
        &CTORATstpTraderSpi::OnErrRtnOrderInsert,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspOrderAction",
        &CTORATstpTraderSpi::OnRspOrderAction,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnErrRtnOrderAction",
        &CTORATstpTraderSpi::OnErrRtnOrderAction,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRtnTrade",
        &CTORATstpTraderSpi::OnRtnTrade,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRtnMarketStatus",
        &CTORATstpTraderSpi::OnRtnMarketStatus,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspCondOrderInsert",
        &CTORATstpTraderSpi::OnRspCondOrderInsert,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRtnCondOrder",
        &CTORATstpTraderSpi::OnRtnCondOrder,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnErrRtnCondOrderInsert",
        &CTORATstpTraderSpi::OnErrRtnCondOrderInsert,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspCondOrderAction",
        &CTORATstpTraderSpi::OnRspCondOrderAction,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnErrRtnCondOrderAction",
        &CTORATstpTraderSpi::OnErrRtnCondOrderAction,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspInquiryJZFund",
        &CTORATstpTraderSpi::OnRspInquiryJZFund,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspTransferFund",
        &CTORATstpTraderSpi::OnRspTransferFund,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRtnTransferFund",
        &CTORATstpTraderSpi::OnRtnTransferFund,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnErrRtnTransferFund",
        &CTORATstpTraderSpi::OnErrRtnTransferFund,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRtnTransferPosition",
        &CTORATstpTraderSpi::OnRtnTransferPosition,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnErrRtnTransferPosition",
        &CTORATstpTraderSpi::OnErrRtnTransferPosition,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspTransferCollateral",
        &CTORATstpTraderSpi::OnRspTransferCollateral,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspInquiryBankAccountFund",
        &CTORATstpTraderSpi::OnRspInquiryBankAccountFund,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspInquiryTradeConcentration",
        &CTORATstpTraderSpi::OnRspInquiryTradeConcentration,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRtnTradingNotice",
        &CTORATstpTraderSpi::OnRtnTradingNotice,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspInquiryMaxOrderVolume",
        &CTORATstpTraderSpi::OnRspInquiryMaxOrderVolume,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRtnPeripheryTransferPosition",
        &CTORATstpTraderSpi::OnRtnPeripheryTransferPosition,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspInquiryHistoryOrder",
        &CTORATstpTraderSpi::OnRspInquiryHistoryOrder,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspInquiryHistoryTrade",
        &CTORATstpTraderSpi::OnRspInquiryHistoryTrade,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryExchange",
        &CTORATstpTraderSpi::OnRspQryExchange,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryMarketData",
        &CTORATstpTraderSpi::OnRspQryMarketData,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQrySecurity",
        &CTORATstpTraderSpi::OnRspQrySecurity,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryETFFile",
        &CTORATstpTraderSpi::OnRspQryETFFile,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryETFBasket",
        &CTORATstpTraderSpi::OnRspQryETFBasket,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryIPOInfo",
        &CTORATstpTraderSpi::OnRspQryIPOInfo,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryBUProxy",
        &CTORATstpTraderSpi::OnRspQryBUProxy,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryUser",
        &CTORATstpTraderSpi::OnRspQryUser,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryInvestor",
        &CTORATstpTraderSpi::OnRspQryInvestor,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryShareholderAccount",
        &CTORATstpTraderSpi::OnRspQryShareholderAccount,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryOrder",
        &CTORATstpTraderSpi::OnRspQryOrder,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryOrderAction",
        &CTORATstpTraderSpi::OnRspQryOrderAction,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryTrade",
        &CTORATstpTraderSpi::OnRspQryTrade,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryTradingAccount",
        &CTORATstpTraderSpi::OnRspQryTradingAccount,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryPosition",
        &CTORATstpTraderSpi::OnRspQryPosition,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryTradingFee",
        &CTORATstpTraderSpi::OnRspQryTradingFee,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryInvestorTradingFee",
        &CTORATstpTraderSpi::OnRspQryInvestorTradingFee,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryIPOQuota",
        &CTORATstpTraderSpi::OnRspQryIPOQuota,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryMarket",
        &CTORATstpTraderSpi::OnRspQryMarket,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryOrderFundDetail",
        &CTORATstpTraderSpi::OnRspQryOrderFundDetail,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryFundTransferDetail",
        &CTORATstpTraderSpi::OnRspQryFundTransferDetail,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryPositionTransferDetail",
        &CTORATstpTraderSpi::OnRspQryPositionTransferDetail,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryPledgePosition",
        &CTORATstpTraderSpi::OnRspQryPledgePosition,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryPledgeInfo",
        &CTORATstpTraderSpi::OnRspQryPledgeInfo,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryConversionBondInfo",
        &CTORATstpTraderSpi::OnRspQryConversionBondInfo,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryBondPutbackInfo",
        &CTORATstpTraderSpi::OnRspQryBondPutbackInfo,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryStandardBondPosition",
        &CTORATstpTraderSpi::OnRspQryStandardBondPosition,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQrySpecialMarketData",
        &CTORATstpTraderSpi::OnRspQrySpecialMarketData,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryPrematurityRepoOrder",
        &CTORATstpTraderSpi::OnRspQryPrematurityRepoOrder,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryShareholderParam",
        &CTORATstpTraderSpi::OnRspQryShareholderParam,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryPeripheryPositionTransferDetail",
        &CTORATstpTraderSpi::OnRspQryPeripheryPositionTransferDetail,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryInvestorCondOrderLimitParam",
        &CTORATstpTraderSpi::OnRspQryInvestorCondOrderLimitParam,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryCondOrder",
        &CTORATstpTraderSpi::OnRspQryCondOrder,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryCondOrderAction",
        &CTORATstpTraderSpi::OnRspQryCondOrderAction,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryTradingNotice",
        &CTORATstpTraderSpi::OnRspQryTradingNotice,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryIPONumberResult",
        &CTORATstpTraderSpi::OnRspQryIPONumberResult,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    c.def("OnRspQryIPOMatchNumberResult",
        &CTORATstpTraderSpi::OnRspQryIPOMatchNumberResult,
        pybind11::return_value_policy::reference,
        pybind11::call_guard<pybind11::gil_scoped_release>()
    );
    AUTOCXXPY_POST_REGISTER_CLASS(tag_vntora, CTORATstpTraderSpi, c);
    module_vntora::objects.emplace("CTORATstpTraderSpi", c);
}
